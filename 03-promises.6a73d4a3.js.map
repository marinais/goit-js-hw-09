{"mappings":"qhBACA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,QAEtC,IAAIC,EAAe,EACfC,EAAc,EACdC,EAAgB,EAEpB,SAASC,EAAcC,EAAUC,GAE/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIbR,EAAOgB,iBAAiB,UAExB,SAAsBC,GACpBA,EAAEC,iBACF,MAAOV,MAAAW,EAAKC,KAAEA,EAAIC,OAAEA,GAAUJ,EAAEK,OAChCnB,EAAeoB,OAAOJ,EAAMK,OAC5BpB,EAAcmB,OAAOH,EAAKI,OAC1BnB,EAAgBkB,OAAOF,EAAOG,OAE9B,IAAK,IAAIC,EAAI,EAAGA,GAAKpB,EAAeoB,GAAK,EACvCnB,EAAcmB,EAAGtB,GACduB,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACrBmB,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAqBtB,QAAiBC,MAAU,IAEzEsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAClBmB,EAAA7B,GAAS8B,OAAOG,QAAQ,sBAAoBxB,QAAiBC,MAAU,IAEvEL,GAAgBC,C","sources":["src/js/03-promises.js"],"sourcesContent":["\nimport Notiflix from 'notiflix'\n\nconst formEl = document.querySelector(\"form\")\n\nlet currentDelay = 0\nlet currentStep = 0\nlet currentAmount = 0\n\nfunction createPromise(position, delay) {\n\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay })\n      } else {\n        reject({ position, delay })\n      }\n    }, delay)\n  })\n}\n  \nformEl.addEventListener(\"submit\", formOnSubmit)\n\nfunction formOnSubmit(e) {\n  e.preventDefault()\n  const {delay, step, amount} = e.target\n  currentDelay = Number(delay.value);\n  currentStep = Number(step.value);\n  currentAmount = Number(amount.value);\n \n  for (let i = 1; i <= currentAmount; i += 1){\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n    currentDelay += currentStep\n  }\n}\n\n// const submitBtEl = document.querySelector(\"button\")\n// const amountEl = document.querySelector(\"amount\")\n// const delayStepEl = document.querySelector(\"step\")\n// const delayEl = document.querySelector(\"delay\")\n\n// createPromise()\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$currentDelay","$47d4ff9957288465$var$currentStep","$47d4ff9957288465$var$currentAmount","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","delay1","step","amount","target","Number","value","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.6a73d4a3.js.map"}