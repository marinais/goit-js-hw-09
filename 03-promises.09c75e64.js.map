{"mappings":"iiBACA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,QAElCC,EAAe,EACfC,EAAc,EACdC,EAAgB,EAEpB,SAASC,EAAcC,EAAUC,GAE/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIPR,EAAOgB,iBAAiB,UAExB,SAAsBC,GACpBA,EAAEC,iBACF,IAA8BC,EAAAF,EAAEG,OAAzBC,EAAuBF,EAAvBX,MAAOc,EAAgBH,EAAhBG,KAAMC,EAAUJ,EAAVI,OACpBpB,EAAeqB,OAAOH,EAAMI,OAC5BrB,EAAcoB,OAAOF,EAAKG,OAC1BpB,EAAgBmB,OAAOD,EAAOE,OAE9B,IAAK,IAAIC,EAAI,EAAGA,GAAKrB,EAAeqB,GAAK,EACvCpB,EAAcoB,EAAGvB,GACdwB,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MACrBqB,EAAA/B,GAASgC,OAAOC,QAAQ,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAEvEyB,OAAM,SAAAL,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAClBqB,EAAA/B,GAASgC,OAAOI,QAAQ,sBAAuCF,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAErEL,GAAgBC,C","sources":["src/js/03-promises.js"],"sourcesContent":["\nimport Notiflix from 'notiflix'\n\nconst formEl = document.querySelector(\"form\")\n\nlet currentDelay = 0\nlet currentStep = 0\nlet currentAmount = 0\n\nfunction createPromise(position, delay) {\n\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay })\n      } else {\n        reject({ position, delay })\n      }\n    }, delay)\n  })\n}\n  \nformEl.addEventListener(\"submit\", formOnSubmit)\n\nfunction formOnSubmit(e) {\n  e.preventDefault()\n  const {delay, step, amount} = e.target\n  currentDelay = Number(delay.value);\n  currentStep = Number(step.value);\n  currentAmount = Number(amount.value);\n \n  for (let i = 1; i <= currentAmount; i += 1){\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n    currentDelay += currentStep\n  }\n}\n\n// const submitBtEl = document.querySelector(\"button\")\n// const amountEl = document.querySelector(\"amount\")\n// const delayStepEl = document.querySelector(\"step\")\n// const delayEl = document.querySelector(\"delay\")\n\n// createPromise()\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$currentDelay","$ce04d3a99e08e73b$var$currentStep","$ce04d3a99e08e73b$var$currentAmount","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","_target","target","delay1","step","amount","Number","value","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.09c75e64.js.map"}